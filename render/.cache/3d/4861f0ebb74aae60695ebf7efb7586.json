{"id":"node_modules/data.js/lib/index.js","dependencies":[{"name":"/home/tiago/works/iat_backend/package.json","includedInParent":true,"mtime":1577388715061},{"name":"/home/tiago/works/iat_backend/node_modules/data.js/package.json","includedInParent":true,"mtime":1577388714717},{"name":"core-js/modules/es6.regexp.to-string","loc":{"line":3,"column":8},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/core-js/modules/es6.regexp.to-string.js"},{"name":"core-js/modules/es6.regexp.constructor","loc":{"line":5,"column":8},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/core-js/modules/es6.regexp.constructor.js"},{"name":"core-js/modules/es6.regexp.split","loc":{"line":7,"column":8},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/core-js/modules/es6.regexp.split.js"},{"name":"core-js/modules/es6.regexp.replace","loc":{"line":9,"column":8},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/core-js/modules/es6.regexp.replace.js"},{"name":"crypto","loc":{"line":12,"column":23},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/crypto-browserify/index.js"},{"name":"fs","loc":{"line":14,"column":19},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":16,"column":21},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/path-browserify/index.js"},{"name":"stream","loc":{"line":18,"column":23},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/stream-browserify/index.js"},{"name":"url","loc":{"line":20,"column":20},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/url/url.js"},{"name":"chardet","loc":{"line":23,"column":24},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/chardet/index.js"},{"name":"node-fetch","loc":{"line":25,"column":22},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/node-fetch/browser.js"},{"name":"lodash","loc":{"line":27,"column":23},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/lodash/lodash.js"},{"name":"mime-types","loc":{"line":29,"column":21},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/mime-types/index.js"},{"name":"url-join","loc":{"line":31,"column":24},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/url-join/lib/url-join.js"},{"name":"stream-to-array","loc":{"line":33,"column":24},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/stream-to-array/index.js"},{"name":"tableschema","loc":{"line":35,"column":22},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/tableschema/lib/index.js"},{"name":"./parser/csv","loc":{"line":41,"column":12},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/data.js/lib/parser/csv.js"},{"name":"./parser/xlsx","loc":{"line":45,"column":12},"parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/data.js/lib/parser/xlsx.js"},{"name":"buffer","parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/buffer/index.js"},{"name":"process","parent":"/home/tiago/works/iat_backend/node_modules/data.js/lib/index.js","resolved":"/home/tiago/works/iat_backend/node_modules/process/browser.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar process = require(\"process\");\n\"use strict\";\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n// File and Dataset objects\nconst crypto = require('crypto');\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst stream = require('stream');\n\nconst url = require('url'); // encoding helpers\n\n\nconst chardet = require('chardet');\n\nconst fetch = require('node-fetch');\n\nconst lodash = require('lodash');\n\nconst mime = require('mime-types');\n\nconst urljoin = require('url-join');\n\nconst toArray = require('stream-to-array');\n\nconst infer = require('tableschema').infer;\n\nconst {\n  csvParser,\n  guessParseOptions,\n  Uint8ArrayToStringsTransformer\n} = require('./parser/csv');\n\nconst {\n  xlsxParser\n} = require('./parser/xlsx');\n\nconst DEFAULT_ENCODING = 'utf-8'; // create a File from a pathOrDescriptor\n\nfunction open(pathOrDescriptor) {\n  let {\n    basePath,\n    format\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let descriptor = null;\n\n  if (lodash.isPlainObject(pathOrDescriptor)) {\n    descriptor = lodash.cloneDeep(pathOrDescriptor); // NB: data must come first - we could have data and path in which path\n    // is not used (data comes from data)\n\n    if (descriptor.data) {\n      return new FileInline(descriptor, {\n        basePath\n      });\n    } else if (descriptor.path) {\n      // We want properties already in our descriptor to take priority over\n      // those inferred from path so we assign in this order\n      descriptor = Object.assign(parsePath(descriptor.path, basePath), descriptor);\n    }\n  } else if (lodash.isString(pathOrDescriptor)) {\n    descriptor = parsePath(pathOrDescriptor, basePath, format);\n  } else {\n    throw new TypeError(\"Cannot create File with \".concat(pathOrDescriptor));\n  }\n\n  const isRemote = descriptor.pathType === 'remote' || isUrl(basePath);\n\n  if (isRemote) {\n    return new FileRemote(descriptor, {\n      basePath\n    });\n  }\n\n  return new FileLocal(descriptor, {\n    basePath\n  });\n} // Abstract Base instance of File\n\n\nclass File {\n  // 2019-02-05 kept for backwards compatibility (we factored method out as open)\n  // TODO: deprecate this ...\n  static load(pathOrDescriptor) {\n    let {\n      basePath,\n      format\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return open(pathOrDescriptor, {\n      basePath,\n      format\n    });\n  }\n\n  constructor(descriptor) {\n    let {\n      basePath\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this._descriptor = descriptor;\n    this._basePath = basePath;\n    this._descriptor.encoding = this.encoding || DEFAULT_ENCODING;\n  }\n\n  get descriptor() {\n    return this._descriptor;\n  }\n\n  get path() {\n    throw new Error('This is an abstract base class which you should not instantiate. Use open() instead');\n  }\n\n  stream() {\n    return null;\n  }\n\n  get buffer() {\n    return (async () => {\n      const stream = await this.stream();\n      const buffers = await toArray(stream);\n      return Buffer.concat(buffers);\n    })();\n  }\n\n  rows() {\n    let {\n      keyed,\n      sheet,\n      size\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this._rows({\n      keyed,\n      sheet,\n      size\n    });\n  }\n\n  _rows() {\n    let {\n      keyed,\n      sheet,\n      size\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (this.descriptor.format in parserDatabase) {\n      const parser = parserDatabase[this.descriptor.format];\n      return parser(this, {\n        keyed,\n        sheet,\n        size\n      });\n    }\n\n    throw new Error(\"We do not have a parser for that format: \".concat(this.descriptor.format));\n  }\n\n  async addSchema() {\n    // Ensure file is tabular\n    if (knownTabularFormats.indexOf(this.descriptor.format) === -1) {\n      throw new Error('File is not in known tabular format.');\n    }\n\n    if (this.displayName === 'FileInline') {\n      this.descriptor.schema = await infer(this.descriptor.data);\n      return;\n    } // Get parserOptions so we can use it when \"infering\" schema:\n\n\n    const parserOptions = await guessParseOptions(this); // We also need to include parserOptions in \"dialect\" property of descriptor:\n\n    this.descriptor.dialect = {\n      delimiter: parserOptions.delimiter,\n      quoteChar: parserOptions.quote // Now let's get a stream from file and infer schema:\n\n    };\n    let thisFileStream = await this.stream({\n      size: 100\n    });\n    this.descriptor.schema = await infer(thisFileStream, parserOptions);\n  }\n\n}\n\nclass FileLocal extends File {\n  get displayName() {\n    return 'FileLocal';\n  }\n\n  get path() {\n    return this._basePath ? path.join(this._basePath, this.descriptor.path) : this.descriptor.path;\n  }\n\n  stream() {\n    let {\n      end\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return fs.createReadStream(this.path, {\n      start: 0,\n      end\n    });\n  }\n\n  get size() {\n    return fs.statSync(this.path).size;\n  }\n\n  get hash() {\n    return crypto.createHash('md5').update(fs.readFileSync(this.path)).digest('base64');\n  }\n\n  get encoding() {\n    // When data is huge, we want to optimize performace (in tradeoff of less accuracy):\n    // So we are using sample of first 100K bytes here:\n    if (this.size > 1000000) {\n      return chardet.detectFileSync(this.path, {\n        sampleSize: 1000000\n      });\n    }\n\n    return chardet.detectFileSync(this.path);\n  }\n\n}\n\nclass FileRemote extends File {\n  get displayName() {\n    return 'FileRemote';\n  }\n\n  get path() {\n    const isItUrl = isUrl(this.descriptor.path);\n\n    if (isItUrl) {\n      return this.descriptor.path;\n    } else {\n      return this._basePath ? urljoin(this._basePath, this.descriptor.path) : this.descriptor.path;\n    }\n  }\n\n  get browserBuffer() {\n    return (async () => {\n      const res = await fetch(this.path);\n      return await res.arrayBuffer();\n    })();\n  }\n\n  stream() {\n    let {\n      size = 0\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return (async () => {\n      const res = await fetch(this.path);\n\n      if (res.status === 200) {\n        if (typeof window === 'undefined') {\n          return res.body;\n        } else {\n          // if in browser, return node like stream so that parsers work\n          // Running in browser: transform browser's ReadableStream to string, then\n          // create a nodejs stream from it:\n          const s = new stream.Readable(); // Create a transform stream with our transformer\n\n          const ts = new TransformStream(new Uint8ArrayToStringsTransformer()); // Apply our Transformer on the ReadableStream to create a stream of strings\n\n          const lineStream = res.body.pipeThrough(ts); // Read the stream of strings\n\n          const reader = lineStream.getReader();\n          let lineCounter = 0;\n\n          while (true) {\n            const {\n              done,\n              value\n            } = await reader.read();\n            lineCounter += 1;\n\n            if (done || lineCounter > size && size !== 0) {\n              reader.cancel();\n              break;\n            } // Write each string line to our nodejs stream\n\n\n            s.push(value + '\\r\\n');\n          }\n\n          s.push(null);\n          return s;\n        }\n      } else {\n        throw new Error(\"\".concat(res.status, \": \").concat(res.statusText, \". Requested URL: \").concat(this.path));\n      }\n    })();\n  }\n\n  get encoding() {\n    return this._encoding || DEFAULT_ENCODING;\n  }\n\n}\n\nclass FileInline extends File {\n  constructor(descriptor) {\n    let {\n      basePath\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(descriptor, {\n      basePath\n    }); // JSON is special case ...\n\n    if (lodash.isString(this.descriptor.data)) {\n      this._buffer = Buffer.from(this.descriptor.data);\n    } else {\n      // It is json/javascript\n      this._buffer = Buffer.from(JSON.stringify(this.descriptor.data));\n    }\n  }\n\n  get displayName() {\n    return 'FileInline';\n  } // Not really sure this should exist here ... - have it for tests atm\n\n\n  get path() {\n    return this.descriptor.path;\n  }\n\n  get size() {\n    return this._buffer.byteLength;\n  }\n\n  get hash() {\n    return crypto.createHash('md5').update(this._buffer).digest('base64');\n  }\n\n  stream() {\n    const bufferStream = new stream.PassThrough();\n    bufferStream.end(this._buffer);\n    return bufferStream;\n  }\n\n  rows() {\n    let {\n      keyed\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (lodash.isArray(this.descriptor.data)) {\n      const rowStream = new stream.PassThrough({\n        objectMode: true\n      });\n      this.descriptor.data.forEach(row => {\n        rowStream.write(row);\n      });\n      rowStream.end();\n      return rowStream;\n    }\n\n    return this._rows({\n      keyed,\n      size\n    });\n  }\n\n} // Available parsers per file format\n\n\nconst parserDatabase = {\n  csv: csvParser,\n  tsv: csvParser,\n  xlsx: xlsxParser,\n  xls: xlsxParser // List of formats that are known as tabular\n\n};\nconst knownTabularFormats = ['csv', 'tsv', 'dsv'];\n\nconst parsePath = function parsePath(path_) {\n  let basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let fileName;\n  const isItUrl = isUrl(path_) || isUrl(basePath);\n\n  if (isItUrl) {\n    const urlParts = url.parse(path_); // eslint-disable-next-line no-useless-escape\n\n    fileName = urlParts.pathname.replace(/^.*[\\\\\\/]/, ''); // Check if format=csv is provided in the query\n    // But if format is provided explicitely by user then it'll be used\n\n    if (!format && urlParts.query && urlParts.query.includes('format=csv')) {\n      format = 'csv';\n    }\n  } else {\n    // eslint-disable-next-line no-useless-escape\n    fileName = path_.replace(/^.*[\\\\\\/]/, '');\n  }\n\n  const extension = path.extname(fileName);\n  fileName = fileName.replace(extension, '').toLowerCase().trim().replace(/&/g, '-and-').replace(/[^a-z0-9-._]+/g, '-');\n  const descriptor = {\n    path: path_,\n    pathType: isItUrl ? 'remote' : 'local',\n    name: fileName,\n    format: format ? format : extension.slice(1).toLowerCase()\n  };\n  const mediatype = mime.lookup(path_);\n\n  if (mediatype) {\n    descriptor.mediatype = mediatype;\n  }\n\n  return descriptor;\n};\n\nconst parseDatasetIdentifier = async path_ => {\n  const out = {\n    name: '',\n    owner: null,\n    path: '',\n    type: '',\n    original: path_,\n    version: ''\n  };\n  if (path_ === null || path_ === '') return out;\n  out.type = isUrl(path_) ? 'url' : 'local';\n  let normalizedPath = path_.replace(/\\/?datapackage\\.json/, '');\n  normalizedPath = normalizedPath.replace(/\\/$/, '');\n\n  if (out.type === 'local') {\n    if (process.platform === 'win32') {\n      out.path = path.resolve(normalizedPath);\n    } else {\n      out.path = path.posix.resolve(normalizedPath);\n    }\n\n    out.name = path.basename(out.path);\n  } else if (out.type === 'url') {\n    const urlparts = url.parse(normalizedPath);\n    const parts = urlparts.pathname.split('/');\n    let name = parts[parts.length - 1];\n    let owner = null; // is this a github repository?\n\n    if (urlparts.host === 'github.com') {\n      out.type = 'github'; // yes, modify url for raw file server\n\n      urlparts.host = 'raw.githubusercontent.com';\n      owner = parts[1];\n      let repoName = parts[2];\n      let branch = 'master'; // is the path a repository root?\n\n      if (parts.length < 6) {\n        // yes, use the repository name for the package name\n        name = repoName;\n      } // does the path contain subfolders (after the repository name)?\n\n\n      if (parts.length == 3) {\n        // no, add 'master' branch\n        parts.push(branch);\n      } else {\n        // yes, extract the branch and remove the 'tree' part\n        branch = parts[4];\n        parts.splice(3, 1);\n      }\n\n      urlparts.pathname = parts.join('/');\n      out.version = branch;\n    } else if (urlparts.host === 'datahub.io') {\n      out.type = 'datahub';\n      urlparts.host = 'pkgstore.datahub.io';\n      owner = parts[1];\n      name = parts[2];\n\n      if (owner !== 'core') {\n        let resolvedPath = await fetch(\"https://api.datahub.io/resolver/resolve?path=\".concat(owner, \"/\").concat(name));\n        resolvedPath = await resolvedPath.json();\n        parts[1] = resolvedPath.userid;\n      }\n\n      let res = await fetch(\"https://api.datahub.io/source/\".concat(parts[1], \"/\").concat(name, \"/successful\"));\n\n      if (res.status >= 400) {\n        throw new Error('Provided URL is invalid. Expected URL to a dataset or descriptor.');\n      }\n\n      res = await res.json();\n      const revisionId = parseInt(res.id.split('/').pop(), 10);\n      parts.push(revisionId);\n      urlparts.pathname = parts.join('/');\n      out.version = revisionId;\n    }\n\n    out.name = name;\n    out.owner = owner;\n    out.path = url.format(urlparts) + '/';\n  }\n\n  return out;\n};\n\nconst isUrl = path_ => {\n  const r = new RegExp('^(?:[a-z]+:)?//', 'i');\n  return r.test(path_);\n};\n\nconst isDataset = path_ => {\n  // If it is a path to file we assume it is not a Dataset\n  // Only exception is 'datapackage.json':\n  if (path_.endsWith('datapackage.json')) {\n    return true;\n  }\n\n  const isItUrl = isUrl(path_);\n\n  if (isItUrl) {\n    // If it is URL we assume it is a file as it does not end with 'datapackage.json'\n    return false;\n  } else if (fs.lstatSync(path_).isFile()) {\n    return false;\n  } // All other cases are true\n\n\n  return true;\n}; // ========================================================\n// Dataset\n\n\nclass Dataset {\n  // TODO: handle owner\n  constructor() {\n    let descriptor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let identifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      path: null,\n      owner: null\n    };\n\n    if (!lodash.isPlainObject(descriptor)) {\n      throw new TypeError(\"To create a new Dataset please use Dataset.load\");\n    }\n\n    this._descriptor = descriptor;\n    this._resources = [];\n    this._identifier = identifier;\n  } // eslint-disable-next-line no-unused-vars\n\n\n  static async load(pathOrDescriptor) {\n    let {\n      owner = null\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!(lodash.isString(pathOrDescriptor) || lodash.isPlainObject(pathOrDescriptor))) {\n      throw new TypeError('Dataset needs to be created with descriptor Object or identifier string');\n    }\n\n    let descriptor,\n        identifier = null;\n\n    if (lodash.isPlainObject(pathOrDescriptor)) {\n      descriptor = pathOrDescriptor;\n      identifier = {\n        path: null,\n        owner: owner\n      };\n    } else {\n      // pathOrDescriptor is a path\n      descriptor = {}; // TODO: owner if provided should override anything parsed from path\n\n      identifier = await parseDatasetIdentifier(pathOrDescriptor);\n    }\n\n    const dataset = new Dataset(descriptor, identifier);\n    await dataset._sync();\n    return dataset;\n  } // Bootstrap ourselves with {this.path}/datapackage.json and readme if exists\n\n\n  async _sync() {\n    const readmePath = this._path('README.md'); // eslint-disable-next-line default-case\n\n\n    switch (this.identifier.type) {\n      case 'local':\n        {\n          if (fs.existsSync(this.dataPackageJsonPath)) {\n            this._descriptor = JSON.parse(fs.readFileSync(this.dataPackageJsonPath));\n            this._originalDescriptor = lodash.cloneDeep(this._descriptor);\n          } else {\n            throw new Error('No datapackage.json at destination.');\n          } // Now get README from local disk if exists\n\n\n          if (fs.existsSync(readmePath)) {\n            this._descriptor.readme = fs.readFileSync(readmePath).toString();\n          }\n\n          break;\n        }\n\n      case 'url':\n      case 'github':\n      case 'datahub':\n        {\n          let res = await fetch(this.dataPackageJsonPath);\n\n          if (res.status >= 400) {\n            throw new Error(\"\".concat(res.status, \": \").concat(res.statusText, \". Requested URL: \").concat(res.url));\n          }\n\n          this._descriptor = await res.json();\n          this._originalDescriptor = lodash.cloneDeep(this._descriptor);\n\n          if (!this._descriptor.readme) {\n            res = await fetch(readmePath); // May not exist and that is ok!\n\n            if (res.status === 200) {\n              this._descriptor.readme = await res.text();\n            }\n          }\n\n          break;\n        }\n    } // handle case where readme was already inlined in the descriptor as readme\n    // attribute as e.g. on the datahub\n    // Now load each resource ...\n\n\n    this._resources = this.descriptor.resources.map(resource => {\n      return open(resource, {\n        basePath: this.path\n      });\n    }); // We need to update original descriptor with metadata about resources after guessing them\n\n    this.descriptor.resources = this._resources.map(resource => {\n      return resource.descriptor;\n    });\n  }\n\n  get identifier() {\n    return this._identifier;\n  }\n\n  get descriptor() {\n    return this._descriptor;\n  }\n\n  get path() {\n    return this.identifier.path;\n  }\n\n  get dataPackageJsonPath() {\n    return this._path('datapackage.json');\n  }\n\n  get readme() {\n    return this._descriptor.readme;\n  } // Array of File objects\n\n\n  get resources() {\n    return this._resources;\n  }\n\n  addResource(resource) {\n    if (lodash.isPlainObject(resource)) {\n      this.descriptor.resources.push(resource);\n      this.resources.push(open(resource));\n    } else if (lodash.isObject(resource)) {\n      // It is already a resource object!\n      this.descriptor.resources.push(resource.descriptor);\n      this.resources.push(resource);\n    } else {\n      throw new TypeError(\"addResource requires a resource descriptor or an instantiated resources but got: \".concat(resource));\n    }\n  } // Path relative to this dataset\n\n\n  _path() {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    const path_ = this.path ? this.path.replace('datapackage.json', '') : this.path; // TODO: ensure offset is relative (security etc)\n\n    switch (this.identifier.type) {\n      case 'local':\n        return path.join(path_, offset);\n\n      case 'url':\n        return urljoin(path_, offset);\n\n      case 'github':\n        return urljoin(path_, offset);\n\n      case 'datahub':\n        return urljoin(path_, offset);\n\n      case undefined:\n        return offset;\n\n      default:\n        throw new Error(\"Unknown path type: \".concat(this.identifier.type));\n    }\n  }\n\n}\n\nmodule.exports = {\n  open,\n  File,\n  FileLocal,\n  FileRemote,\n  FileInline,\n  parsePath,\n  parseDatasetIdentifier,\n  isUrl,\n  isDataset,\n  Dataset,\n  xlsxParser,\n  csvParser\n};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/data.js/lib/index.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/data.js/lib/index.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}}],"sources":{"node_modules/data.js/lib/index.js":"\"use strict\";\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n// File and Dataset objects\nconst crypto = require('crypto');\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst stream = require('stream');\n\nconst url = require('url'); // encoding helpers\n\n\nconst chardet = require('chardet');\n\nconst fetch = require('node-fetch');\n\nconst lodash = require('lodash');\n\nconst mime = require('mime-types');\n\nconst urljoin = require('url-join');\n\nconst toArray = require('stream-to-array');\n\nconst infer = require('tableschema').infer;\n\nconst {\n  csvParser,\n  guessParseOptions,\n  Uint8ArrayToStringsTransformer\n} = require('./parser/csv');\n\nconst {\n  xlsxParser\n} = require('./parser/xlsx');\n\nconst DEFAULT_ENCODING = 'utf-8'; // create a File from a pathOrDescriptor\n\nfunction open(pathOrDescriptor) {\n  let {\n    basePath,\n    format\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let descriptor = null;\n\n  if (lodash.isPlainObject(pathOrDescriptor)) {\n    descriptor = lodash.cloneDeep(pathOrDescriptor); // NB: data must come first - we could have data and path in which path\n    // is not used (data comes from data)\n\n    if (descriptor.data) {\n      return new FileInline(descriptor, {\n        basePath\n      });\n    } else if (descriptor.path) {\n      // We want properties already in our descriptor to take priority over\n      // those inferred from path so we assign in this order\n      descriptor = Object.assign(parsePath(descriptor.path, basePath), descriptor);\n    }\n  } else if (lodash.isString(pathOrDescriptor)) {\n    descriptor = parsePath(pathOrDescriptor, basePath, format);\n  } else {\n    throw new TypeError(\"Cannot create File with \".concat(pathOrDescriptor));\n  }\n\n  const isRemote = descriptor.pathType === 'remote' || isUrl(basePath);\n\n  if (isRemote) {\n    return new FileRemote(descriptor, {\n      basePath\n    });\n  }\n\n  return new FileLocal(descriptor, {\n    basePath\n  });\n} // Abstract Base instance of File\n\n\nclass File {\n  // 2019-02-05 kept for backwards compatibility (we factored method out as open)\n  // TODO: deprecate this ...\n  static load(pathOrDescriptor) {\n    let {\n      basePath,\n      format\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return open(pathOrDescriptor, {\n      basePath,\n      format\n    });\n  }\n\n  constructor(descriptor) {\n    let {\n      basePath\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this._descriptor = descriptor;\n    this._basePath = basePath;\n    this._descriptor.encoding = this.encoding || DEFAULT_ENCODING;\n  }\n\n  get descriptor() {\n    return this._descriptor;\n  }\n\n  get path() {\n    throw new Error('This is an abstract base class which you should not instantiate. Use open() instead');\n  }\n\n  stream() {\n    return null;\n  }\n\n  get buffer() {\n    return (async () => {\n      const stream = await this.stream();\n      const buffers = await toArray(stream);\n      return Buffer.concat(buffers);\n    })();\n  }\n\n  rows() {\n    let {\n      keyed,\n      sheet,\n      size\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this._rows({\n      keyed,\n      sheet,\n      size\n    });\n  }\n\n  _rows() {\n    let {\n      keyed,\n      sheet,\n      size\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (this.descriptor.format in parserDatabase) {\n      const parser = parserDatabase[this.descriptor.format];\n      return parser(this, {\n        keyed,\n        sheet,\n        size\n      });\n    }\n\n    throw new Error(\"We do not have a parser for that format: \".concat(this.descriptor.format));\n  }\n\n  async addSchema() {\n    // Ensure file is tabular\n    if (knownTabularFormats.indexOf(this.descriptor.format) === -1) {\n      throw new Error('File is not in known tabular format.');\n    }\n\n    if (this.displayName === 'FileInline') {\n      this.descriptor.schema = await infer(this.descriptor.data);\n      return;\n    } // Get parserOptions so we can use it when \"infering\" schema:\n\n\n    const parserOptions = await guessParseOptions(this); // We also need to include parserOptions in \"dialect\" property of descriptor:\n\n    this.descriptor.dialect = {\n      delimiter: parserOptions.delimiter,\n      quoteChar: parserOptions.quote // Now let's get a stream from file and infer schema:\n\n    };\n    let thisFileStream = await this.stream({\n      size: 100\n    });\n    this.descriptor.schema = await infer(thisFileStream, parserOptions);\n  }\n\n}\n\nclass FileLocal extends File {\n  get displayName() {\n    return 'FileLocal';\n  }\n\n  get path() {\n    return this._basePath ? path.join(this._basePath, this.descriptor.path) : this.descriptor.path;\n  }\n\n  stream() {\n    let {\n      end\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return fs.createReadStream(this.path, {\n      start: 0,\n      end\n    });\n  }\n\n  get size() {\n    return fs.statSync(this.path).size;\n  }\n\n  get hash() {\n    return crypto.createHash('md5').update(fs.readFileSync(this.path)).digest('base64');\n  }\n\n  get encoding() {\n    // When data is huge, we want to optimize performace (in tradeoff of less accuracy):\n    // So we are using sample of first 100K bytes here:\n    if (this.size > 1000000) {\n      return chardet.detectFileSync(this.path, {\n        sampleSize: 1000000\n      });\n    }\n\n    return chardet.detectFileSync(this.path);\n  }\n\n}\n\nclass FileRemote extends File {\n  get displayName() {\n    return 'FileRemote';\n  }\n\n  get path() {\n    const isItUrl = isUrl(this.descriptor.path);\n\n    if (isItUrl) {\n      return this.descriptor.path;\n    } else {\n      return this._basePath ? urljoin(this._basePath, this.descriptor.path) : this.descriptor.path;\n    }\n  }\n\n  get browserBuffer() {\n    return (async () => {\n      const res = await fetch(this.path);\n      return await res.arrayBuffer();\n    })();\n  }\n\n  stream() {\n    let {\n      size = 0\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return (async () => {\n      const res = await fetch(this.path);\n\n      if (res.status === 200) {\n        if (typeof window === 'undefined') {\n          return res.body;\n        } else {\n          // if in browser, return node like stream so that parsers work\n          // Running in browser: transform browser's ReadableStream to string, then\n          // create a nodejs stream from it:\n          const s = new stream.Readable(); // Create a transform stream with our transformer\n\n          const ts = new TransformStream(new Uint8ArrayToStringsTransformer()); // Apply our Transformer on the ReadableStream to create a stream of strings\n\n          const lineStream = res.body.pipeThrough(ts); // Read the stream of strings\n\n          const reader = lineStream.getReader();\n          let lineCounter = 0;\n\n          while (true) {\n            const {\n              done,\n              value\n            } = await reader.read();\n            lineCounter += 1;\n\n            if (done || lineCounter > size && size !== 0) {\n              reader.cancel();\n              break;\n            } // Write each string line to our nodejs stream\n\n\n            s.push(value + '\\r\\n');\n          }\n\n          s.push(null);\n          return s;\n        }\n      } else {\n        throw new Error(\"\".concat(res.status, \": \").concat(res.statusText, \". Requested URL: \").concat(this.path));\n      }\n    })();\n  }\n\n  get encoding() {\n    return this._encoding || DEFAULT_ENCODING;\n  }\n\n}\n\nclass FileInline extends File {\n  constructor(descriptor) {\n    let {\n      basePath\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(descriptor, {\n      basePath\n    }); // JSON is special case ...\n\n    if (lodash.isString(this.descriptor.data)) {\n      this._buffer = Buffer.from(this.descriptor.data);\n    } else {\n      // It is json/javascript\n      this._buffer = Buffer.from(JSON.stringify(this.descriptor.data));\n    }\n  }\n\n  get displayName() {\n    return 'FileInline';\n  } // Not really sure this should exist here ... - have it for tests atm\n\n\n  get path() {\n    return this.descriptor.path;\n  }\n\n  get size() {\n    return this._buffer.byteLength;\n  }\n\n  get hash() {\n    return crypto.createHash('md5').update(this._buffer).digest('base64');\n  }\n\n  stream() {\n    const bufferStream = new stream.PassThrough();\n    bufferStream.end(this._buffer);\n    return bufferStream;\n  }\n\n  rows() {\n    let {\n      keyed\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (lodash.isArray(this.descriptor.data)) {\n      const rowStream = new stream.PassThrough({\n        objectMode: true\n      });\n      this.descriptor.data.forEach(row => {\n        rowStream.write(row);\n      });\n      rowStream.end();\n      return rowStream;\n    }\n\n    return this._rows({\n      keyed,\n      size\n    });\n  }\n\n} // Available parsers per file format\n\n\nconst parserDatabase = {\n  csv: csvParser,\n  tsv: csvParser,\n  xlsx: xlsxParser,\n  xls: xlsxParser // List of formats that are known as tabular\n\n};\nconst knownTabularFormats = ['csv', 'tsv', 'dsv'];\n\nconst parsePath = function parsePath(path_) {\n  let basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let fileName;\n  const isItUrl = isUrl(path_) || isUrl(basePath);\n\n  if (isItUrl) {\n    const urlParts = url.parse(path_); // eslint-disable-next-line no-useless-escape\n\n    fileName = urlParts.pathname.replace(/^.*[\\\\\\/]/, ''); // Check if format=csv is provided in the query\n    // But if format is provided explicitely by user then it'll be used\n\n    if (!format && urlParts.query && urlParts.query.includes('format=csv')) {\n      format = 'csv';\n    }\n  } else {\n    // eslint-disable-next-line no-useless-escape\n    fileName = path_.replace(/^.*[\\\\\\/]/, '');\n  }\n\n  const extension = path.extname(fileName);\n  fileName = fileName.replace(extension, '').toLowerCase().trim().replace(/&/g, '-and-').replace(/[^a-z0-9-._]+/g, '-');\n  const descriptor = {\n    path: path_,\n    pathType: isItUrl ? 'remote' : 'local',\n    name: fileName,\n    format: format ? format : extension.slice(1).toLowerCase()\n  };\n  const mediatype = mime.lookup(path_);\n\n  if (mediatype) {\n    descriptor.mediatype = mediatype;\n  }\n\n  return descriptor;\n};\n\nconst parseDatasetIdentifier = async path_ => {\n  const out = {\n    name: '',\n    owner: null,\n    path: '',\n    type: '',\n    original: path_,\n    version: ''\n  };\n  if (path_ === null || path_ === '') return out;\n  out.type = isUrl(path_) ? 'url' : 'local';\n  let normalizedPath = path_.replace(/\\/?datapackage\\.json/, '');\n  normalizedPath = normalizedPath.replace(/\\/$/, '');\n\n  if (out.type === 'local') {\n    if (process.platform === 'win32') {\n      out.path = path.resolve(normalizedPath);\n    } else {\n      out.path = path.posix.resolve(normalizedPath);\n    }\n\n    out.name = path.basename(out.path);\n  } else if (out.type === 'url') {\n    const urlparts = url.parse(normalizedPath);\n    const parts = urlparts.pathname.split('/');\n    let name = parts[parts.length - 1];\n    let owner = null; // is this a github repository?\n\n    if (urlparts.host === 'github.com') {\n      out.type = 'github'; // yes, modify url for raw file server\n\n      urlparts.host = 'raw.githubusercontent.com';\n      owner = parts[1];\n      let repoName = parts[2];\n      let branch = 'master'; // is the path a repository root?\n\n      if (parts.length < 6) {\n        // yes, use the repository name for the package name\n        name = repoName;\n      } // does the path contain subfolders (after the repository name)?\n\n\n      if (parts.length == 3) {\n        // no, add 'master' branch\n        parts.push(branch);\n      } else {\n        // yes, extract the branch and remove the 'tree' part\n        branch = parts[4];\n        parts.splice(3, 1);\n      }\n\n      urlparts.pathname = parts.join('/');\n      out.version = branch;\n    } else if (urlparts.host === 'datahub.io') {\n      out.type = 'datahub';\n      urlparts.host = 'pkgstore.datahub.io';\n      owner = parts[1];\n      name = parts[2];\n\n      if (owner !== 'core') {\n        let resolvedPath = await fetch(\"https://api.datahub.io/resolver/resolve?path=\".concat(owner, \"/\").concat(name));\n        resolvedPath = await resolvedPath.json();\n        parts[1] = resolvedPath.userid;\n      }\n\n      let res = await fetch(\"https://api.datahub.io/source/\".concat(parts[1], \"/\").concat(name, \"/successful\"));\n\n      if (res.status >= 400) {\n        throw new Error('Provided URL is invalid. Expected URL to a dataset or descriptor.');\n      }\n\n      res = await res.json();\n      const revisionId = parseInt(res.id.split('/').pop(), 10);\n      parts.push(revisionId);\n      urlparts.pathname = parts.join('/');\n      out.version = revisionId;\n    }\n\n    out.name = name;\n    out.owner = owner;\n    out.path = url.format(urlparts) + '/';\n  }\n\n  return out;\n};\n\nconst isUrl = path_ => {\n  const r = new RegExp('^(?:[a-z]+:)?//', 'i');\n  return r.test(path_);\n};\n\nconst isDataset = path_ => {\n  // If it is a path to file we assume it is not a Dataset\n  // Only exception is 'datapackage.json':\n  if (path_.endsWith('datapackage.json')) {\n    return true;\n  }\n\n  const isItUrl = isUrl(path_);\n\n  if (isItUrl) {\n    // If it is URL we assume it is a file as it does not end with 'datapackage.json'\n    return false;\n  } else if (fs.lstatSync(path_).isFile()) {\n    return false;\n  } // All other cases are true\n\n\n  return true;\n}; // ========================================================\n// Dataset\n\n\nclass Dataset {\n  // TODO: handle owner\n  constructor() {\n    let descriptor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let identifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      path: null,\n      owner: null\n    };\n\n    if (!lodash.isPlainObject(descriptor)) {\n      throw new TypeError(\"To create a new Dataset please use Dataset.load\");\n    }\n\n    this._descriptor = descriptor;\n    this._resources = [];\n    this._identifier = identifier;\n  } // eslint-disable-next-line no-unused-vars\n\n\n  static async load(pathOrDescriptor) {\n    let {\n      owner = null\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!(lodash.isString(pathOrDescriptor) || lodash.isPlainObject(pathOrDescriptor))) {\n      throw new TypeError('Dataset needs to be created with descriptor Object or identifier string');\n    }\n\n    let descriptor,\n        identifier = null;\n\n    if (lodash.isPlainObject(pathOrDescriptor)) {\n      descriptor = pathOrDescriptor;\n      identifier = {\n        path: null,\n        owner: owner\n      };\n    } else {\n      // pathOrDescriptor is a path\n      descriptor = {}; // TODO: owner if provided should override anything parsed from path\n\n      identifier = await parseDatasetIdentifier(pathOrDescriptor);\n    }\n\n    const dataset = new Dataset(descriptor, identifier);\n    await dataset._sync();\n    return dataset;\n  } // Bootstrap ourselves with {this.path}/datapackage.json and readme if exists\n\n\n  async _sync() {\n    const readmePath = this._path('README.md'); // eslint-disable-next-line default-case\n\n\n    switch (this.identifier.type) {\n      case 'local':\n        {\n          if (fs.existsSync(this.dataPackageJsonPath)) {\n            this._descriptor = JSON.parse(fs.readFileSync(this.dataPackageJsonPath));\n            this._originalDescriptor = lodash.cloneDeep(this._descriptor);\n          } else {\n            throw new Error('No datapackage.json at destination.');\n          } // Now get README from local disk if exists\n\n\n          if (fs.existsSync(readmePath)) {\n            this._descriptor.readme = fs.readFileSync(readmePath).toString();\n          }\n\n          break;\n        }\n\n      case 'url':\n      case 'github':\n      case 'datahub':\n        {\n          let res = await fetch(this.dataPackageJsonPath);\n\n          if (res.status >= 400) {\n            throw new Error(\"\".concat(res.status, \": \").concat(res.statusText, \". Requested URL: \").concat(res.url));\n          }\n\n          this._descriptor = await res.json();\n          this._originalDescriptor = lodash.cloneDeep(this._descriptor);\n\n          if (!this._descriptor.readme) {\n            res = await fetch(readmePath); // May not exist and that is ok!\n\n            if (res.status === 200) {\n              this._descriptor.readme = await res.text();\n            }\n          }\n\n          break;\n        }\n    } // handle case where readme was already inlined in the descriptor as readme\n    // attribute as e.g. on the datahub\n    // Now load each resource ...\n\n\n    this._resources = this.descriptor.resources.map(resource => {\n      return open(resource, {\n        basePath: this.path\n      });\n    }); // We need to update original descriptor with metadata about resources after guessing them\n\n    this.descriptor.resources = this._resources.map(resource => {\n      return resource.descriptor;\n    });\n  }\n\n  get identifier() {\n    return this._identifier;\n  }\n\n  get descriptor() {\n    return this._descriptor;\n  }\n\n  get path() {\n    return this.identifier.path;\n  }\n\n  get dataPackageJsonPath() {\n    return this._path('datapackage.json');\n  }\n\n  get readme() {\n    return this._descriptor.readme;\n  } // Array of File objects\n\n\n  get resources() {\n    return this._resources;\n  }\n\n  addResource(resource) {\n    if (lodash.isPlainObject(resource)) {\n      this.descriptor.resources.push(resource);\n      this.resources.push(open(resource));\n    } else if (lodash.isObject(resource)) {\n      // It is already a resource object!\n      this.descriptor.resources.push(resource.descriptor);\n      this.resources.push(resource);\n    } else {\n      throw new TypeError(\"addResource requires a resource descriptor or an instantiated resources but got: \".concat(resource));\n    }\n  } // Path relative to this dataset\n\n\n  _path() {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    const path_ = this.path ? this.path.replace('datapackage.json', '') : this.path; // TODO: ensure offset is relative (security etc)\n\n    switch (this.identifier.type) {\n      case 'local':\n        return path.join(path_, offset);\n\n      case 'url':\n        return urljoin(path_, offset);\n\n      case 'github':\n        return urljoin(path_, offset);\n\n      case 'datahub':\n        return urljoin(path_, offset);\n\n      case undefined:\n        return offset;\n\n      default:\n        throw new Error(\"Unknown path type: \".concat(this.identifier.type));\n    }\n  }\n\n}\n\nmodule.exports = {\n  open,\n  File,\n  FileLocal,\n  FileRemote,\n  FileInline,\n  parsePath,\n  parseDatasetIdentifier,\n  isUrl,\n  isDataset,\n  Dataset,\n  xlsxParser,\n  csvParser\n};"},"lineCount":724}},"error":null,"hash":"e63fbf4c8992b7a225e33c8e0204dc6e","cacheData":{"env":{}}}